// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.24.4
// source: index/search_v1.proto

package index

import (
	newsdoc "github.com/ttab/elephant-api/newsdoc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentType string       `protobuf:"bytes,1,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
	Language     string       `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Query        *QueryV1     `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Fields       []string     `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	Sort         []*SortingV1 `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort,omitempty"`
	Source       bool         `protobuf:"varint,6,opt,name=source,proto3" json:"source,omitempty"`
	From         int64        `protobuf:"varint,7,opt,name=from,proto3" json:"from,omitempty"`
	Size         int64        `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	SearchAfter  []string     `protobuf:"bytes,9,rep,name=search_after,json=searchAfter,proto3" json:"search_after,omitempty"`
	// LoadDocument will load the current version of the document from the
	// repository and include it with the search response.
	LoadDocument bool `protobuf:"varint,10,opt,name=load_document,json=loadDocument,proto3" json:"load_document,omitempty"`
}

func (x *QueryRequestV1) Reset() {
	*x = QueryRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequestV1) ProtoMessage() {}

func (x *QueryRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequestV1.ProtoReflect.Descriptor instead.
func (*QueryRequestV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{0}
}

func (x *QueryRequestV1) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

func (x *QueryRequestV1) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *QueryRequestV1) GetQuery() *QueryV1 {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *QueryRequestV1) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *QueryRequestV1) GetSort() []*SortingV1 {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *QueryRequestV1) GetSource() bool {
	if x != nil {
		return x.Source
	}
	return false
}

func (x *QueryRequestV1) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *QueryRequestV1) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QueryRequestV1) GetSearchAfter() []string {
	if x != nil {
		return x.SearchAfter
	}
	return nil
}

func (x *QueryRequestV1) GetLoadDocument() bool {
	if x != nil {
		return x.LoadDocument
	}
	return false
}

type QueryV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Conditions:
	//
	//	*QueryV1_Bool
	//	*QueryV1_Range
	//	*QueryV1_Exists
	//	*QueryV1_MatchAll
	//	*QueryV1_Term
	//	*QueryV1_Terms
	//	*QueryV1_Match
	//	*QueryV1_MatchPhrase
	//	*QueryV1_QueryString
	//	*QueryV1_Prefix
	Conditions isQueryV1_Conditions `protobuf_oneof:"conditions"`
}

func (x *QueryV1) Reset() {
	*x = QueryV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryV1) ProtoMessage() {}

func (x *QueryV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryV1.ProtoReflect.Descriptor instead.
func (*QueryV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{1}
}

func (m *QueryV1) GetConditions() isQueryV1_Conditions {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (x *QueryV1) GetBool() *BoolQueryV1 {
	if x, ok := x.GetConditions().(*QueryV1_Bool); ok {
		return x.Bool
	}
	return nil
}

func (x *QueryV1) GetRange() *RangeQueryV1 {
	if x, ok := x.GetConditions().(*QueryV1_Range); ok {
		return x.Range
	}
	return nil
}

func (x *QueryV1) GetExists() string {
	if x, ok := x.GetConditions().(*QueryV1_Exists); ok {
		return x.Exists
	}
	return ""
}

func (x *QueryV1) GetMatchAll() *MatchAllQueryV1 {
	if x, ok := x.GetConditions().(*QueryV1_MatchAll); ok {
		return x.MatchAll
	}
	return nil
}

func (x *QueryV1) GetTerm() *TermQueryV1 {
	if x, ok := x.GetConditions().(*QueryV1_Term); ok {
		return x.Term
	}
	return nil
}

func (x *QueryV1) GetTerms() *TermsQueryV1 {
	if x, ok := x.GetConditions().(*QueryV1_Terms); ok {
		return x.Terms
	}
	return nil
}

func (x *QueryV1) GetMatch() *MatchQueryV1 {
	if x, ok := x.GetConditions().(*QueryV1_Match); ok {
		return x.Match
	}
	return nil
}

func (x *QueryV1) GetMatchPhrase() *MatchPhraseQueryV1 {
	if x, ok := x.GetConditions().(*QueryV1_MatchPhrase); ok {
		return x.MatchPhrase
	}
	return nil
}

func (x *QueryV1) GetQueryString() string {
	if x, ok := x.GetConditions().(*QueryV1_QueryString); ok {
		return x.QueryString
	}
	return ""
}

func (x *QueryV1) GetPrefix() *PrefixQueryV1 {
	if x, ok := x.GetConditions().(*QueryV1_Prefix); ok {
		return x.Prefix
	}
	return nil
}

type isQueryV1_Conditions interface {
	isQueryV1_Conditions()
}

type QueryV1_Bool struct {
	Bool *BoolQueryV1 `protobuf:"bytes,1,opt,name=bool,proto3,oneof"`
}

type QueryV1_Range struct {
	Range *RangeQueryV1 `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

type QueryV1_Exists struct {
	Exists string `protobuf:"bytes,3,opt,name=exists,proto3,oneof"`
}

type QueryV1_MatchAll struct {
	MatchAll *MatchAllQueryV1 `protobuf:"bytes,4,opt,name=match_all,json=matchAll,proto3,oneof"`
}

type QueryV1_Term struct {
	Term *TermQueryV1 `protobuf:"bytes,5,opt,name=term,proto3,oneof"`
}

type QueryV1_Terms struct {
	Terms *TermsQueryV1 `protobuf:"bytes,6,opt,name=terms,proto3,oneof"`
}

type QueryV1_Match struct {
	Match *MatchQueryV1 `protobuf:"bytes,7,opt,name=match,proto3,oneof"`
}

type QueryV1_MatchPhrase struct {
	MatchPhrase *MatchPhraseQueryV1 `protobuf:"bytes,8,opt,name=match_phrase,json=matchPhrase,proto3,oneof"`
}

type QueryV1_QueryString struct {
	QueryString string `protobuf:"bytes,9,opt,name=query_string,json=queryString,proto3,oneof"`
}

type QueryV1_Prefix struct {
	Prefix *PrefixQueryV1 `protobuf:"bytes,10,opt,name=prefix,proto3,oneof"`
}

func (*QueryV1_Bool) isQueryV1_Conditions() {}

func (*QueryV1_Range) isQueryV1_Conditions() {}

func (*QueryV1_Exists) isQueryV1_Conditions() {}

func (*QueryV1_MatchAll) isQueryV1_Conditions() {}

func (*QueryV1_Term) isQueryV1_Conditions() {}

func (*QueryV1_Terms) isQueryV1_Conditions() {}

func (*QueryV1_Match) isQueryV1_Conditions() {}

func (*QueryV1_MatchPhrase) isQueryV1_Conditions() {}

func (*QueryV1_QueryString) isQueryV1_Conditions() {}

func (*QueryV1_Prefix) isQueryV1_Conditions() {}

type BoolQueryV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Must    []*QueryV1 `protobuf:"bytes,1,rep,name=must,proto3" json:"must,omitempty"`
	MustNot []*QueryV1 `protobuf:"bytes,2,rep,name=must_not,json=mustNot,proto3" json:"must_not,omitempty"`
	Should  []*QueryV1 `protobuf:"bytes,3,rep,name=should,proto3" json:"should,omitempty"`
	Filter  []*QueryV1 `protobuf:"bytes,4,rep,name=filter,proto3" json:"filter,omitempty"`
}

func (x *BoolQueryV1) Reset() {
	*x = BoolQueryV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolQueryV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolQueryV1) ProtoMessage() {}

func (x *BoolQueryV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolQueryV1.ProtoReflect.Descriptor instead.
func (*BoolQueryV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{2}
}

func (x *BoolQueryV1) GetMust() []*QueryV1 {
	if x != nil {
		return x.Must
	}
	return nil
}

func (x *BoolQueryV1) GetMustNot() []*QueryV1 {
	if x != nil {
		return x.MustNot
	}
	return nil
}

func (x *BoolQueryV1) GetShould() []*QueryV1 {
	if x != nil {
		return x.Should
	}
	return nil
}

func (x *BoolQueryV1) GetFilter() []*QueryV1 {
	if x != nil {
		return x.Filter
	}
	return nil
}

type RangeQueryV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Gt    string `protobuf:"bytes,2,opt,name=gt,proto3" json:"gt,omitempty"`
	Gte   string `protobuf:"bytes,3,opt,name=gte,proto3" json:"gte,omitempty"`
	Lt    string `protobuf:"bytes,4,opt,name=lt,proto3" json:"lt,omitempty"`
	Lte   string `protobuf:"bytes,5,opt,name=lte,proto3" json:"lte,omitempty"`
}

func (x *RangeQueryV1) Reset() {
	*x = RangeQueryV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeQueryV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeQueryV1) ProtoMessage() {}

func (x *RangeQueryV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeQueryV1.ProtoReflect.Descriptor instead.
func (*RangeQueryV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{3}
}

func (x *RangeQueryV1) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *RangeQueryV1) GetGt() string {
	if x != nil {
		return x.Gt
	}
	return ""
}

func (x *RangeQueryV1) GetGte() string {
	if x != nil {
		return x.Gte
	}
	return ""
}

func (x *RangeQueryV1) GetLt() string {
	if x != nil {
		return x.Lt
	}
	return ""
}

func (x *RangeQueryV1) GetLte() string {
	if x != nil {
		return x.Lte
	}
	return ""
}

type MatchAllQueryV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MatchAllQueryV1) Reset() {
	*x = MatchAllQueryV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchAllQueryV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchAllQueryV1) ProtoMessage() {}

func (x *MatchAllQueryV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchAllQueryV1.ProtoReflect.Descriptor instead.
func (*MatchAllQueryV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{4}
}

type TermQueryV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TermQueryV1) Reset() {
	*x = TermQueryV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TermQueryV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermQueryV1) ProtoMessage() {}

func (x *TermQueryV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermQueryV1.ProtoReflect.Descriptor instead.
func (*TermQueryV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{5}
}

func (x *TermQueryV1) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *TermQueryV1) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TermsQueryV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field  string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *TermsQueryV1) Reset() {
	*x = TermsQueryV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TermsQueryV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermsQueryV1) ProtoMessage() {}

func (x *TermsQueryV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermsQueryV1.ProtoReflect.Descriptor instead.
func (*TermsQueryV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{6}
}

func (x *TermsQueryV1) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *TermsQueryV1) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type MatchQueryV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MatchQueryV1) Reset() {
	*x = MatchQueryV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchQueryV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchQueryV1) ProtoMessage() {}

func (x *MatchQueryV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchQueryV1.ProtoReflect.Descriptor instead.
func (*MatchQueryV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{7}
}

func (x *MatchQueryV1) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *MatchQueryV1) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type MatchPhraseQueryV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MatchPhraseQueryV1) Reset() {
	*x = MatchPhraseQueryV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPhraseQueryV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPhraseQueryV1) ProtoMessage() {}

func (x *MatchPhraseQueryV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPhraseQueryV1.ProtoReflect.Descriptor instead.
func (*MatchPhraseQueryV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{8}
}

func (x *MatchPhraseQueryV1) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *MatchPhraseQueryV1) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PrefixQueryV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PrefixQueryV1) Reset() {
	*x = PrefixQueryV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrefixQueryV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefixQueryV1) ProtoMessage() {}

func (x *PrefixQueryV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefixQueryV1.ProtoReflect.Descriptor instead.
func (*PrefixQueryV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{9}
}

func (x *PrefixQueryV1) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *PrefixQueryV1) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SortingV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Desc  bool   `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *SortingV1) Reset() {
	*x = SortingV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortingV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortingV1) ProtoMessage() {}

func (x *SortingV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortingV1.ProtoReflect.Descriptor instead.
func (*SortingV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{10}
}

func (x *SortingV1) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SortingV1) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type QueryResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Took     int64     `protobuf:"varint,1,opt,name=took,proto3" json:"took,omitempty"`
	TimedOut bool      `protobuf:"varint,2,opt,name=timed_out,json=timedOut,proto3" json:"timed_out,omitempty"`
	Shards   *ShardsV1 `protobuf:"bytes,3,opt,name=shards,proto3" json:"shards,omitempty"`
	Hits     *HitsV1   `protobuf:"bytes,4,opt,name=hits,proto3" json:"hits,omitempty"`
}

func (x *QueryResponseV1) Reset() {
	*x = QueryResponseV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponseV1) ProtoMessage() {}

func (x *QueryResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponseV1.ProtoReflect.Descriptor instead.
func (*QueryResponseV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{11}
}

func (x *QueryResponseV1) GetTook() int64 {
	if x != nil {
		return x.Took
	}
	return 0
}

func (x *QueryResponseV1) GetTimedOut() bool {
	if x != nil {
		return x.TimedOut
	}
	return false
}

func (x *QueryResponseV1) GetShards() *ShardsV1 {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *QueryResponseV1) GetHits() *HitsV1 {
	if x != nil {
		return x.Hits
	}
	return nil
}

type ShardsV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total      int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Successful int32 `protobuf:"varint,2,opt,name=successful,proto3" json:"successful,omitempty"`
	Skipped    int32 `protobuf:"varint,3,opt,name=skipped,proto3" json:"skipped,omitempty"`
	Failed     int32 `protobuf:"varint,4,opt,name=failed,proto3" json:"failed,omitempty"`
}

func (x *ShardsV1) Reset() {
	*x = ShardsV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardsV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardsV1) ProtoMessage() {}

func (x *ShardsV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardsV1.ProtoReflect.Descriptor instead.
func (*ShardsV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{12}
}

func (x *ShardsV1) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ShardsV1) GetSuccessful() int32 {
	if x != nil {
		return x.Successful
	}
	return 0
}

func (x *ShardsV1) GetSkipped() int32 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *ShardsV1) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

type HitsV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    *HitsTotalV1 `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	MaxScore float32      `protobuf:"fixed32,2,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
	Hits     []*HitV1     `protobuf:"bytes,3,rep,name=hits,proto3" json:"hits,omitempty"`
}

func (x *HitsV1) Reset() {
	*x = HitsV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HitsV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitsV1) ProtoMessage() {}

func (x *HitsV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitsV1.ProtoReflect.Descriptor instead.
func (*HitsV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{13}
}

func (x *HitsV1) GetTotal() *HitsTotalV1 {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *HitsV1) GetMaxScore() float32 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

func (x *HitsV1) GetHits() []*HitV1 {
	if x != nil {
		return x.Hits
	}
	return nil
}

type HitsTotalV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    int64  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Relation string `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *HitsTotalV1) Reset() {
	*x = HitsTotalV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HitsTotalV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitsTotalV1) ProtoMessage() {}

func (x *HitsTotalV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitsTotalV1.ProtoReflect.Descriptor instead.
func (*HitsTotalV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{14}
}

func (x *HitsTotalV1) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *HitsTotalV1) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

type HitV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Score    float32                   `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	Fields   map[string]*FieldValuesV1 `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Source   map[string]*FieldValuesV1 `protobuf:"bytes,4,rep,name=source,proto3" json:"source,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Sort     []string                  `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort,omitempty"`
	Document *newsdoc.Document         `protobuf:"bytes,6,opt,name=document,proto3" json:"document,omitempty"`
}

func (x *HitV1) Reset() {
	*x = HitV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HitV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitV1) ProtoMessage() {}

func (x *HitV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitV1.ProtoReflect.Descriptor instead.
func (*HitV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{15}
}

func (x *HitV1) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HitV1) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *HitV1) GetFields() map[string]*FieldValuesV1 {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *HitV1) GetSource() map[string]*FieldValuesV1 {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *HitV1) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *HitV1) GetDocument() *newsdoc.Document {
	if x != nil {
		return x.Document
	}
	return nil
}

type FieldValuesV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *FieldValuesV1) Reset() {
	*x = FieldValuesV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldValuesV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldValuesV1) ProtoMessage() {}

func (x *FieldValuesV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldValuesV1.ProtoReflect.Descriptor instead.
func (*FieldValuesV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{16}
}

func (x *FieldValuesV1) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type GetMappingsRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentType string `protobuf:"bytes,1,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
}

func (x *GetMappingsRequestV1) Reset() {
	*x = GetMappingsRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMappingsRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMappingsRequestV1) ProtoMessage() {}

func (x *GetMappingsRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMappingsRequestV1.ProtoReflect.Descriptor instead.
func (*GetMappingsRequestV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{17}
}

func (x *GetMappingsRequestV1) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

type GetMappingsResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*MappingPropertyV1 `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *GetMappingsResponseV1) Reset() {
	*x = GetMappingsResponseV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMappingsResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMappingsResponseV1) ProtoMessage() {}

func (x *GetMappingsResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMappingsResponseV1.ProtoReflect.Descriptor instead.
func (*GetMappingsResponseV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{18}
}

func (x *GetMappingsResponseV1) GetProperties() []*MappingPropertyV1 {
	if x != nil {
		return x.Properties
	}
	return nil
}

type MappingPropertyV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type   string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Path   string            `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Fields []*MappingFieldV1 `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *MappingPropertyV1) Reset() {
	*x = MappingPropertyV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingPropertyV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingPropertyV1) ProtoMessage() {}

func (x *MappingPropertyV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingPropertyV1.ProtoReflect.Descriptor instead.
func (*MappingPropertyV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{19}
}

func (x *MappingPropertyV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MappingPropertyV1) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MappingPropertyV1) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MappingPropertyV1) GetFields() []*MappingFieldV1 {
	if x != nil {
		return x.Fields
	}
	return nil
}

type MappingFieldV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *MappingFieldV1) Reset() {
	*x = MappingFieldV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_search_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingFieldV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingFieldV1) ProtoMessage() {}

func (x *MappingFieldV1) ProtoReflect() protoreflect.Message {
	mi := &file_index_search_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingFieldV1.ProtoReflect.Descriptor instead.
func (*MappingFieldV1) Descriptor() ([]byte, []int) {
	return file_index_search_v1_proto_rawDescGZIP(), []int{20}
}

func (x *MappingFieldV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MappingFieldV1) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_index_search_v1_proto protoreflect.FileDescriptor

var file_index_search_v1_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x76,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x15, 0x6e, 0x65, 0x77, 0x73, 0x64, 0x6f, 0x63,
	0x2f, 0x6e, 0x65, 0x77, 0x73, 0x64, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf,
	0x02, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x31, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x56, 0x31, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0xa0, 0x04, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x12, 0x31, 0x0a, 0x04,
	0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6c, 0x65,
	0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12,
	0x34, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x48, 0x00, 0x52, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x3e, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x56, 0x31, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x12,
	0x31, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x54,
	0x65, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65,
	0x72, 0x6d, 0x12, 0x34, 0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x48,
	0x00, 0x52, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x56, 0x31, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x47,
	0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x48, 0x00, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x0c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x56, 0x31, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x75, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x52, 0x04, 0x6d, 0x75, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x08, 0x6d, 0x75, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x52, 0x07, 0x6d, 0x75, 0x73,
	0x74, 0x4e, 0x6f, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x52, 0x06, 0x73,
	0x68, 0x6f, 0x75, 0x6c, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74,
	0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x68, 0x0a, 0x0c, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x67, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x67, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x67, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x74, 0x65,
	0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x56, 0x31, 0x22, 0x39, 0x0a, 0x0b, 0x54, 0x65, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c,
	0x0a, 0x0c, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x0c,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x12, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xa0,
	0x01, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x56, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x6f, 0x6f, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x5f,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x64,
	0x4f, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x56, 0x31, 0x52, 0x06, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x68, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x48, 0x69, 0x74, 0x73, 0x56, 0x31, 0x52, 0x04, 0x68, 0x69, 0x74,
	0x73, 0x22, 0x72, 0x0a, 0x08, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x56, 0x31, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x66, 0x75, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x06, 0x48, 0x69, 0x74, 0x73, 0x56, 0x31,
	0x12, 0x31, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x48, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x31, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x29, 0x0a, 0x04, 0x68, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x48, 0x69, 0x74, 0x56, 0x31, 0x52, 0x04, 0x68, 0x69, 0x74, 0x73, 0x22, 0x3f, 0x0a, 0x0b, 0x48,
	0x69, 0x74, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x03, 0x0a,
	0x05, 0x48, 0x69, 0x74, 0x56, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x48, 0x69,
	0x74, 0x56, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x48, 0x69, 0x74, 0x56, 0x31, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x64,
	0x6f, 0x63, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x58, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74,
	0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x56, 0x31, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x58, 0x0a, 0x0b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x56, 0x31, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x27, 0x0a, 0x0d, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x56, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x3b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x5a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x12, 0x41, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x31, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x11,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56,
	0x31, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x65, 0x6c, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x31, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x0e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_index_search_v1_proto_rawDescOnce sync.Once
	file_index_search_v1_proto_rawDescData = file_index_search_v1_proto_rawDesc
)

func file_index_search_v1_proto_rawDescGZIP() []byte {
	file_index_search_v1_proto_rawDescOnce.Do(func() {
		file_index_search_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_index_search_v1_proto_rawDescData)
	})
	return file_index_search_v1_proto_rawDescData
}

var file_index_search_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_index_search_v1_proto_goTypes = []interface{}{
	(*QueryRequestV1)(nil),        // 0: elephant.index.QueryRequestV1
	(*QueryV1)(nil),               // 1: elephant.index.QueryV1
	(*BoolQueryV1)(nil),           // 2: elephant.index.BoolQueryV1
	(*RangeQueryV1)(nil),          // 3: elephant.index.RangeQueryV1
	(*MatchAllQueryV1)(nil),       // 4: elephant.index.MatchAllQueryV1
	(*TermQueryV1)(nil),           // 5: elephant.index.TermQueryV1
	(*TermsQueryV1)(nil),          // 6: elephant.index.TermsQueryV1
	(*MatchQueryV1)(nil),          // 7: elephant.index.MatchQueryV1
	(*MatchPhraseQueryV1)(nil),    // 8: elephant.index.MatchPhraseQueryV1
	(*PrefixQueryV1)(nil),         // 9: elephant.index.PrefixQueryV1
	(*SortingV1)(nil),             // 10: elephant.index.SortingV1
	(*QueryResponseV1)(nil),       // 11: elephant.index.QueryResponseV1
	(*ShardsV1)(nil),              // 12: elephant.index.ShardsV1
	(*HitsV1)(nil),                // 13: elephant.index.HitsV1
	(*HitsTotalV1)(nil),           // 14: elephant.index.HitsTotalV1
	(*HitV1)(nil),                 // 15: elephant.index.HitV1
	(*FieldValuesV1)(nil),         // 16: elephant.index.FieldValuesV1
	(*GetMappingsRequestV1)(nil),  // 17: elephant.index.GetMappingsRequestV1
	(*GetMappingsResponseV1)(nil), // 18: elephant.index.GetMappingsResponseV1
	(*MappingPropertyV1)(nil),     // 19: elephant.index.MappingPropertyV1
	(*MappingFieldV1)(nil),        // 20: elephant.index.MappingFieldV1
	nil,                           // 21: elephant.index.HitV1.FieldsEntry
	nil,                           // 22: elephant.index.HitV1.SourceEntry
	(*newsdoc.Document)(nil),      // 23: newsdoc.Document
}
var file_index_search_v1_proto_depIdxs = []int32{
	1,  // 0: elephant.index.QueryRequestV1.query:type_name -> elephant.index.QueryV1
	10, // 1: elephant.index.QueryRequestV1.sort:type_name -> elephant.index.SortingV1
	2,  // 2: elephant.index.QueryV1.bool:type_name -> elephant.index.BoolQueryV1
	3,  // 3: elephant.index.QueryV1.range:type_name -> elephant.index.RangeQueryV1
	4,  // 4: elephant.index.QueryV1.match_all:type_name -> elephant.index.MatchAllQueryV1
	5,  // 5: elephant.index.QueryV1.term:type_name -> elephant.index.TermQueryV1
	6,  // 6: elephant.index.QueryV1.terms:type_name -> elephant.index.TermsQueryV1
	7,  // 7: elephant.index.QueryV1.match:type_name -> elephant.index.MatchQueryV1
	8,  // 8: elephant.index.QueryV1.match_phrase:type_name -> elephant.index.MatchPhraseQueryV1
	9,  // 9: elephant.index.QueryV1.prefix:type_name -> elephant.index.PrefixQueryV1
	1,  // 10: elephant.index.BoolQueryV1.must:type_name -> elephant.index.QueryV1
	1,  // 11: elephant.index.BoolQueryV1.must_not:type_name -> elephant.index.QueryV1
	1,  // 12: elephant.index.BoolQueryV1.should:type_name -> elephant.index.QueryV1
	1,  // 13: elephant.index.BoolQueryV1.filter:type_name -> elephant.index.QueryV1
	12, // 14: elephant.index.QueryResponseV1.shards:type_name -> elephant.index.ShardsV1
	13, // 15: elephant.index.QueryResponseV1.hits:type_name -> elephant.index.HitsV1
	14, // 16: elephant.index.HitsV1.total:type_name -> elephant.index.HitsTotalV1
	15, // 17: elephant.index.HitsV1.hits:type_name -> elephant.index.HitV1
	21, // 18: elephant.index.HitV1.fields:type_name -> elephant.index.HitV1.FieldsEntry
	22, // 19: elephant.index.HitV1.source:type_name -> elephant.index.HitV1.SourceEntry
	23, // 20: elephant.index.HitV1.document:type_name -> newsdoc.Document
	19, // 21: elephant.index.GetMappingsResponseV1.properties:type_name -> elephant.index.MappingPropertyV1
	20, // 22: elephant.index.MappingPropertyV1.fields:type_name -> elephant.index.MappingFieldV1
	16, // 23: elephant.index.HitV1.FieldsEntry.value:type_name -> elephant.index.FieldValuesV1
	16, // 24: elephant.index.HitV1.SourceEntry.value:type_name -> elephant.index.FieldValuesV1
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_index_search_v1_proto_init() }
func file_index_search_v1_proto_init() {
	if File_index_search_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_index_search_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolQueryV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeQueryV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchAllQueryV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TermQueryV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TermsQueryV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchQueryV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPhraseQueryV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrefixQueryV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortingV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponseV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardsV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HitsV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HitsTotalV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HitV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldValuesV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMappingsRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMappingsResponseV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappingPropertyV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_search_v1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappingFieldV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_index_search_v1_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*QueryV1_Bool)(nil),
		(*QueryV1_Range)(nil),
		(*QueryV1_Exists)(nil),
		(*QueryV1_MatchAll)(nil),
		(*QueryV1_Term)(nil),
		(*QueryV1_Terms)(nil),
		(*QueryV1_Match)(nil),
		(*QueryV1_MatchPhrase)(nil),
		(*QueryV1_QueryString)(nil),
		(*QueryV1_Prefix)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_index_search_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_index_search_v1_proto_goTypes,
		DependencyIndexes: file_index_search_v1_proto_depIdxs,
		MessageInfos:      file_index_search_v1_proto_msgTypes,
	}.Build()
	File_index_search_v1_proto = out.File
	file_index_search_v1_proto_rawDesc = nil
	file_index_search_v1_proto_goTypes = nil
	file_index_search_v1_proto_depIdxs = nil
}
